trigger:
  branches:
    include:
    - master
    - dev

name: '$(Date:yyyyMMdd).$(Rev:r)[$(BuildID)]'

stages:

- stage: 'Build'
  variables:
  - group: build-vars
  - name: buildConfiguration
    value: Release

  jobs:
  - job:
    pool:
      name: 'Azure Pipelines'
      vmImage: windows-latest
      demands:
        - msbuild
        - visualstudio

    steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
        
      - task: DotNetCoreCLI@2
        displayName: 'NuGet restore'
        inputs:
          command: restore
          projects: '**\*.sln'

      - task: VSBuild@1
        displayName: 'Build preview version'
        inputs:
          solution: 'src\CLI\CLI.csproj'
          configuration: '$(BuildConfiguration)'

      - task: codesigning@2
        displayName: 'Signing .exe files'
        inputs:
          secureFileId: xarial-code-signing.pfx
          signCertPassword: $(CODE_SIGN_CERT_PWD)
          files: 'src/CLI/**/*.exe'
          timeServer: 'http://timestamp.comodoca.com'
          hashingAlgorithm: 'SHA256'
          description: 'Docify'

      - task: DotNetCoreCLI@2
        inputs:
          command: custom
          custom: pack
          arguments: src/CLI/CLI.csproj --version-suffix $(Build.BuildId) --output $(Build.ArtifactStagingDirectory)/packages/preview --no-build /p:Configuration=$(BuildConfiguration)
      
      - task: VSBuild@1
        displayName: 'Build test projects'
        inputs:
            solution: 'tests\*.Tests\*.csproj'
            configuration: '$(BuildConfiguration)'
            
      - task: VSTest@2
        displayName: 'Unit test'
        inputs:
          testAssemblyVer2: |
            tests\**\*.Tests.dll
            !**\obj\**
          configuration: '$(BuildConfiguration)'

      - ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/build-pipelne'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - task: VSBuild@1
          displayName: 'Build production version'
          inputs:
            solution: 'src\CLI\CLI.csproj'
            configuration: '$(BuildConfiguration)'
            clean: true
      
      - ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/build-pipelne'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - task: codesigning@2
          displayName: 'Signing .exe files'
          inputs:
            secureFileId: xarial-code-signing.pfx
            signCertPassword: $(CODE_SIGN_CERT_PWD)
            files: 'src/CLI/**/*.exe'
            timeServer: 'http://timestamp.comodoca.com'
            hashingAlgorithm: 'SHA256'
            description: 'Docify'

      - ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/build-pipelne'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - task: DotNetCoreCLI@2
          inputs:
            command: custom
            custom: pack
            arguments: src/CLI/CLI.csproj --output $(Build.ArtifactStagingDirectory)/packages/prod --no-build /p:Configuration=$(BuildConfiguration)
      
      - publish: '$(Build.ArtifactStagingDirectory)/packages'
        artifact: 'packages'