---
layout: default
pageIndex: 0
---
@using RazorLight
@using System
@using System.Linq
@using Xarial.Docify.Base.Context
@inherits TemplatePage<Xarial.Docify.Base.Context.IContextModel>
@{
    var posts = Model.Page.SubPages.Where(p =>
    {
        var isToc = !p.Data.ContainsKey("toc") || p.Data.GetOrDefault<bool>("toc");
        var isSitemap = !p.Data.ContainsKey("sitemap") || p.Data.GetOrDefault<bool>("sitemap");

        return isToc && isSitemap;
    }).OrderByDescending(p => GetDate(p));

    string GetDescription(IContextPage post)
    {
        return post.Data.GetOrDefault<string>("description");
    }

    string GetIconUrl(IContextPage post)
    {
        var img = post.Data.GetOrDefault<string>("image");
        if (!string.IsNullOrEmpty(img))
        {
            if (!img.StartsWith("/"))
            {
                img = post.Url.TrimEnd('/') + "/" + img;
            }
        }
        return img;
    }

    DateTime? GetDate(IContextPage post)
    {
        var postDateStr = post.Data.GetOrDefault<string>("date");

        if (!string.IsNullOrEmpty(postDateStr))
        {
            return DateTime.ParseExact(postDateStr, "yyyy-MM-dd", null);
        }
        else
        {
            return null;
        }
    }
}
<div>
    @foreach (var post in posts)
    {
        <div class="post-preview-date">@GetDate(post)?.ToString("dd MMM, yyyy")</div>
        <div class="post-preview">
            <div class="post-preview-icon"><a href="/"><img src="@GetIconUrl(post)" width="150px" alt="@Xarial.Docify.Lib.Tools.PageHelper.GetCaption(post, null)" /></a></div>
            <div class="post-preview-title"><a href="@post.Url">@Xarial.Docify.Lib.Tools.PageHelper.GetTitle(post, null)</a></div>
            <div class="post-preview-description">@GetDescription(post)</div>
        </div>
    }
</div>
