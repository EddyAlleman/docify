---
title_attribute: caption
home_menu: true
menu:
root_page:
---
@using RazorLight
@using System
@using System.Linq
@using System.Collections.Generic
@using Xarial.Docify.Lib.Tools
@using Xarial.Docify.Base.Context
@inherits TemplatePage<Xarial.Docify.Base.Context.IIncludeContextModel>
@{
    const string MENU_OPT = "menu";
    const string HOME_MENU_OPT = "home_menu";

    var menu = NavigationMenuHelper.BuildPredefinedMenu(MENU_OPT, Model.Site, Model.Data)?.ToList();

    if (menu == null)
    {
        menu = NavigationMenuHelper.GetRootPage(Model).SubPages.ToList();

        if (Model.Data.GetOrDefault<bool>(HOME_MENU_OPT))
        {
            menu.Insert(0, NavigationMenuHelper.BuildPage(Model.Site.MainPage, Model.Data, "Home"));
        }
    }

    string RenderMenu(IEnumerable<IContextPage> pages)
    {
        var html = new System.Text.StringBuilder();

        foreach (var menuPage in pages)
        {
            var active = string.Equals(menuPage.Url, Model.Page?.Url, StringComparison.CurrentCultureIgnoreCase) ? " active" : "";
            html.AppendLine($"<li class=\"menu-item{active}\">");
            html.AppendLine($"<a href=\"{menuPage.Url}\">{PageHelper.GetTitle(menuPage, Model.Data)}</a>");

            if (menuPage.SubPages.Any())
            {
                html.AppendLine("<ul class=\"sub-menu-item-container\">");
                html.AppendLine(@RenderMenu(menuPage.SubPages));
                html.AppendLine("</ul>");
            }
            html.AppendLine("</li>");
        }

        return html.ToString();
    }
}

<ul class="menu sub-menu-item-container" id="top-menu">
    <a class="menu-icon" onclick="OpenMenu(this)">
        <div class="bar1"></div>
        <div class="bar2"></div>
        <div class="bar3"></div>
    </a>
    @Raw(RenderMenu(menu))
</ul>
